
######## snakemake preamble start (automatically inserted, do not edit) ########
import sys; sys.path.extend(['/opt/miniforge3/envs/scvi/lib/python3.9/site-packages', '/home/mint/.cache/snakemake/snakemake/source-cache/runtime-cache/tmpvcglxrij/file/mnt/exfat01/projects/scRNA-0722/workflow/scripts/scanpy', '/mnt/exfat01/projects/scRNA-0722/workflow/scripts/scanpy']); import pickle; snakemake = pickle.loads(b'\x80\x04\x95\xc1\x08\x00\x00\x00\x00\x00\x00\x8c\x10snakemake.script\x94\x8c\tSnakemake\x94\x93\x94)\x81\x94}\x94(\x8c\x05input\x94\x8c\x0csnakemake.io\x94\x8c\nInputFiles\x94\x93\x94)\x81\x94\x8c3data/processed/scanpy/05_postQC_processed_data.h5ad\x94a}\x94(\x8c\x06_names\x94}\x94\x8c\ninput_file\x94K\x00N\x86\x94s\x8c\x12_allowed_overrides\x94]\x94(\x8c\x05index\x94\x8c\x04sort\x94eh\x12\x8c\tfunctools\x94\x8c\x07partial\x94\x93\x94h\x06\x8c\x19Namedlist._used_attribute\x94\x93\x94\x85\x94R\x94(h\x18)}\x94\x8c\x05_name\x94h\x12sNt\x94bh\x13h\x16h\x18\x85\x94R\x94(h\x18)}\x94h\x1ch\x13sNt\x94bh\x0eh\nub\x8c\x06output\x94h\x06\x8c\x0bOutputFiles\x94\x93\x94)\x81\x94\x8c\x17data/06_integrated.h5ad\x94a}\x94(h\x0c}\x94\x8c\x0boutput_file\x94K\x00N\x86\x94sh\x10]\x94(h\x12h\x13eh\x12h\x16h\x18\x85\x94R\x94(h\x18)}\x94h\x1ch\x12sNt\x94bh\x13h\x16h\x18\x85\x94R\x94(h\x18)}\x94h\x1ch\x13sNt\x94bh)h&ub\x8c\x06params\x94h\x06\x8c\x06Params\x94\x93\x94)\x81\x94(K\x02K\x1eM\x90\x01\x88\x8c\x05Batch\x94e}\x94(h\x0c}\x94(\x8c\x08n_layers\x94K\x00N\x86\x94\x8c\x08n_latent\x94K\x01N\x86\x94\x8c\x08n_epochs\x94K\x02N\x86\x94\x8c\x08use_cuda\x94K\x03N\x86\x94\x8c\tbatch_idx\x94K\x04N\x86\x94uh\x10]\x94(h\x12h\x13eh\x12h\x16h\x18\x85\x94R\x94(h\x18)}\x94h\x1ch\x12sNt\x94bh\x13h\x16h\x18\x85\x94R\x94(h\x18)}\x94h\x1ch\x13sNt\x94bh;K\x02h=K\x1eh?M\x90\x01hA\x88hCh8ub\x8c\twildcards\x94h\x06\x8c\tWildcards\x94\x93\x94)\x81\x94}\x94(h\x0c}\x94h\x10]\x94(h\x12h\x13eh\x12h\x16h\x18\x85\x94R\x94(h\x18)}\x94h\x1ch\x12sNt\x94bh\x13h\x16h\x18\x85\x94R\x94(h\x18)}\x94h\x1ch\x13sNt\x94bub\x8c\x07threads\x94K\x01\x8c\tresources\x94h\x06\x8c\tResources\x94\x93\x94)\x81\x94(K\x01K\x01\x8c\x04/tmp\x94e}\x94(h\x0c}\x94(\x8c\x06_cores\x94K\x00N\x86\x94\x8c\x06_nodes\x94K\x01N\x86\x94\x8c\x06tmpdir\x94K\x02N\x86\x94uh\x10]\x94(h\x12h\x13eh\x12h\x16h\x18\x85\x94R\x94(h\x18)}\x94h\x1ch\x12sNt\x94bh\x13h\x16h\x18\x85\x94R\x94(h\x18)}\x94h\x1ch\x13sNt\x94bheK\x01hgK\x01hihbub\x8c\x03log\x94h\x06\x8c\x03Log\x94\x93\x94)\x81\x94}\x94(h\x0c}\x94h\x10]\x94(h\x12h\x13eh\x12h\x16h\x18\x85\x94R\x94(h\x18)}\x94h\x1ch\x12sNt\x94bh\x13h\x16h\x18\x85\x94R\x94(h\x18)}\x94h\x1ch\x13sNt\x94bub\x8c\x06config\x94}\x94(\x8c\x05input\x94}\x94(\x8c\x06seurat\x94\x8c\x19data/raw/seurat_input.rds\x94\x8c\x06scanpy\x94\x8c\x1adata/raw/scanpy_input.h5ad\x94u\x8c\noutput_dir\x94}\x94(\x8c\x06seurat\x94\x8c\x0eresults/seurat\x94\x8c\x06scanpy\x94\x8c\x0eresults/scanpy\x94u\x8c\rprocessed_dir\x94}\x94(\x8c\x06seurat\x94\x8c\x15data/processed/seurat\x94\x8c\x06scanpy\x94\x8c\x15data/processed/scanpy\x94u\x8c\x0bfigures_dir\x94}\x94(\x8c\x06seurat\x94\x8c\x0efigures/seurat\x94\x8c\x06scanpy\x94\x8c\x0efigures/scanpy\x94u\x8c\x02qc\x94}\x94(\x8c\x10max_nFeature_RNA\x94M@\x1f\x8c\x10min_nFeature_RNA\x94M\xf4\x01\x8c\x0emax_nCount_RNA\x94M0u\x8c\x0emin_nCount_RNA\x94M\xe8\x03\x8c\x0emax_percent_mt\x94K\n\x8c\x10max_percent_ribo\x94K\x14\x8c\x0emin_num_Malat1\x94K\x03\x8c\x0emax_percent_hb\x94K\x01\x8c\x10percent_doublets\x94G?\xa9\x99\x99\x99\x99\x99\x9au\x8c\x0en_var_features\x94M\xc4\t\x8c\x10regress_features\x94]\x94(\x8c\nnCount_RNA\x94\x8c\x0cnFeature_RNA\x94\x8c\npercent.mt\x94\x8c\x0cpercent.ribo\x94\x8c\tG2M_score\x94\x8c\x07S_score\x94e\x8c\x05n_pcs\x94K\x1e\x8c\x0bresolutions\x94]\x94(K\x00G?\xc0\x00\x00\x00\x00\x00\x00G?\xd0\x00\x00\x00\x00\x00\x00G?\xd8\x00\x00\x00\x00\x00\x00G?\xe0\x00\x00\x00\x00\x00\x00G?\xe4\x00\x00\x00\x00\x00\x00G?\xe8\x00\x00\x00\x00\x00\x00G?\xec\x00\x00\x00\x00\x00\x00K\x01G?\xf2\x00\x00\x00\x00\x00\x00G?\xf4\x00\x00\x00\x00\x00\x00G?\xf6\x00\x00\x00\x00\x00\x00G?\xf8\x00\x00\x00\x00\x00\x00G?\xfa\x00\x00\x00\x00\x00\x00G?\xfc\x00\x00\x00\x00\x00\x00G?\xfe\x00\x00\x00\x00\x00\x00K\x02G@\x01\x00\x00\x00\x00\x00\x00G@\x02\x00\x00\x00\x00\x00\x00G@\x03\x00\x00\x00\x00\x00\x00G@\x04\x00\x00\x00\x00\x00\x00G@\x05\x00\x00\x00\x00\x00\x00G@\x06\x00\x00\x00\x00\x00\x00G@\x07\x00\x00\x00\x00\x00\x00K\x03e\x8c\x04umap\x94}\x94(\x8c\x04dims\x94K\x1e\x8c\x0bn_neighbors\x94K\x1e\x8c\x08min_dist\x94G?\xd9\x99\x99\x99\x99\x99\x9a\x8c\x06spread\x94K\x01\x8c\x06method\x94\x8c\numap-learn\x94\x8c\x06metric\x94\x8c\tminkowski\x94u\x8c\x07threads\x94K\x02\x8c\x0brandom_seed\x94K*\x8c\x07logging\x94}\x94(\x8c\x05level\x94\x8c\x04INFO\x94\x8c\x06output\x94\x8c\x11logs/analysis.log\x94uu\x8c\x04rule\x94\x8c\x10scanpy_integrate\x94\x8c\x0fbench_iteration\x94N\x8c\tscriptdir\x94\x8c8/mnt/exfat01/projects/scRNA-0722/workflow/scripts/scanpy\x94ub.'); from snakemake.logging import logger; logger.printshellcmds = True; __real_file__ = __file__; __file__ = '/mnt/exfat01/projects/scRNA-0722/workflow/scripts/scanpy/06_integrate.py';
######## snakemake preamble end #########
import numpy as np
import scanpy as sc
import scvi
from typing import Tuple
from snakemake.logging import logger

scvi.settings.seed = 42

# 获取输入和输出文件路径
input_file = snakemake.input[0]
output_file = snakemake.output[0]

# 获取参数
layer_num = snakemake.params.n_layers
latent_num = snakemake.params.n_latent
epochs_num = snakemake.params.n_epochs
use_cuda = snakemake.params.use_cuda
batch_index = snakemake.params.batch_idx

logger.info(f"输入文件: {input_file}")
logger.info(f"输出文件: {output_file}")
logger.info(f"scVI 潜在空间维度: {latent_num}")
logger.info(f"训练轮次: {epochs_num}")
logger.info(f"是否使用 GPU: {use_cuda}")

# 读取 AnnData 对象
adata = sc.read_h5ad(input_file)
logger.info(f"成功读取 AnnData 对象，包含 {adata.n_obs} 个细胞和 {adata.n_vars} 个基因")

# SCVI setup
scvi.model.SCVI.setup_anndata(adata, layer="counts", batch_key=batch_index)

model = scvi.model.SCVI(adata, n_layers = layer_num, n_latent = latent_num, gene_likelihood = "nb")

model.train()

SCVI_LATENT_KEY = "X_scVI"
adata.obsm[SCVI_LATENT_KEY] = model.get_latent_representation()

# 保存结果
adata.write_h5ad(output_file)
logger.info(f"处理后的 AnnData 对象已保存至 {output_file}")

