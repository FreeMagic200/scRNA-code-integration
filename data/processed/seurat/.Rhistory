"Ptprc"
),
"Immature\nneurons" = c("Dcx", "Stmn1", "Gng8", "Ebf2", "Lhx2", "Cbx8"),
Mature_neurons = c("Gng13", "Rtp1"),
vSMC = c("Acta2", "Tagln"),
#vascular smooth muscle cells
VLMC = c("Lum", "Dcn", "Col1a1"),
# vascular leptomeningeal cells
Dopaminergic = c("Th", "Ddc"),
Erythrocytes = c(
"Hbb-bt",
"Hbb-bs",
"Hbb-bh2",
"Hbb-bh1",
"Hbb-bh0",
"Hbb-y",
"Hba-x",
"Hba-a1",
"Hbq1b",
"Hba-a2",
"Hbq1a",
"Hba-ps4"
)
)
# marker_genes <- unique(
#   c(
#     'Vim',
#     'Hmga2',
#     'Col2a1',
#     'Sox2',
#     'Hes1',
#     'Fabp7',
#     'Slc1a3',
#     'Ttyh1',
#     'Sox2',
#     'Hes1',
#     'Mki67',
#     'Hmga2',
#     'Top2a',
#     'Cdk1',
#     'Aldh1l1',
#     'Slc1a3',
#     'Gfap',
#     'Aqp4',
#     'Apoe',
#     'Sox10',
#     'Pdgfra',
#     'Olig1',
#     'Apod',
#     'Dio2',
#     'Slc16a2',
#     'Col23a1',
#     'Rax',
#     'Crym',
#     'Ascl1',
#     'Neurog2',
#     'Isl1',
#     'Tubb3',
#     'Snap25',
#     'Ina',
#     'Slc32a1',
#     'Slc17a6',
#     'Slc17a7',
#     'Hdc',
#     'Pcna',
#     'Mki67',
#     'Mag',
#     'Mog',
#     'Mbp',
#     'Plp1',
#     'Ccdc153',
#     'Foxj1',
#     'Foxj1',
#     'Mpz',
#     'Dhh',
#     'Egr2',
#     'Dcn',
#     'Col1a1',
#     'Col1a2',
#     'Lum',
#     'Dio2',
#     'Slc16a2',
#     'Col23a1',
#     'Pdgfrb',
#     'Rgs5',
#     'Kcnj8',
#     'Abcc9',
#     'Epcam',
#     'Krt5',
#     'Pecam1',
#     'Vwf',
#     'Cldn5',
#     'Fcgr3',
#     'Cd68',
#     'Lyz2',
#     'C1qa',
#     'Cx3cr1',
#     'Ptprc',
#     'Dcx',
#     'Stmn1',
#     'Gng8',
#     'Olig2',
#     'Ebf2',
#     'Lhx2',
#     'Cbx8',
#     'Gng13',
#     'Rtp1',
#     'Ebf2',
#     'Scnb1',
#     'Nes'
#   )
# )
marker_genes_list <- list(
RGC = c("Vim", "Hmga2", "Col2a1", "Hes1", "Fabp7", "Sox2", "Cdk1", "Nes"),
AS = c("Aldh1l1", "Gfap", "Aqp4", "Apoe", "Slc1a3", "Agt"),
#
OPC = c("Sox10", "Olig2", "Pdgfra", "Olig1", "Apod"),
#
Tanycyte = c("Dio2", "Slc16a2", "Col23a1", "Rax", "Crym", "Spef2"),#Col25a1
#
IPC = c("Ascl1", "Neurog2"),
#
Neu = c("Isl1", "Tubb3", "Snap25", "Ina", "Syt1"),
GABA = c("Slc32a1", "Gad1", "Gad2", "Aldh1a1", "Slc18a2"),
#
GLU = c("Slc17a6", "Slc17a7" , "Slc17a8"),
# #
Hist = c("Hdc", "Slc18a2"),
# #
Proliferative_cells = c("Mki67", "Top2a", "Pcna"),
OD = c("Mag", "Mog", "Mbp", "Plp1", "Gpr17"),
#
Ependymal = c("Ccdc153", "Foxj1", "Sntn"),
#
Schwann_cell = c("Mpz", "Dhh", "Egr2"),
Fibroblasts = c("Dcn", "Col1a1", "Col1a2", "Lum"),
Pericytes = c("Pdgfrb", "Rgs5", "Kcnj8", "Abcc9"),
"Epithe-\nlial\ncell" = c("Epcam"),
"Endothelial\ncell" = c("Abcb1a", "Pecam1", "Vwf", "Cldn5", "Itm2a", "Flt1"),
Microglia = c(
"Fcgr3",
"Cd68",
"Lyz2",
"C1qa",
"C1qb",
"Aif1",
"Cx3cr1",
"Ptprc"
),
"Immature\nneurons" = c("Dcx", "Stmn1", "Gng8", "Ebf2", "Lhx2", "Cbx8"),
Mature_neurons = c("Gng13", "Rtp1"),
vSMC = c("Acta2", "Tagln"),
#vascular smooth muscle cells
VLMC = c("Lum", "Dcn", "Col1a1"),
# vascular leptomeningeal cells
Dopaminergic = c("Th", "Ddc"),
Erythrocytes = c(
"Hbb-bt",
"Hbb-bs",
"Hbb-bh2",
"Hbb-bh1",
"Hbb-bh0",
"Hbb-y",
"Hba-x",
"Hba-a1",
"Hbq1b",
"Hba-a2",
"Hbq1a",
"Hba-ps4"
)
)
FeaturePlot(obj,"Mbp")
library(Seurat)
library(ggplot2)
library(stringr)
library(future)
library(patchwork)
library(clustree)
library(dplyr)
library(scCustomize)
set.seed(42)
setwd("/mnt/data/projects/scRNA-0722-Reviewed/data/processed/seurat/30d")
setwd("/mnt/data/projects/scRNA-0722-Reviewed/data/processed/seurat/30d")
obj<-readRDS("./umap_tunned_103530_cells.rds")
# jointPCA-------------------------------------------------------
DimPlot(obj, group.by = "Batch", reduction = "jointpca.umap") + ggtitle("integrated by jointpca")
DimPlot(obj, reduction = "jointpca.umap", group.by = "RNA_snn_res.1.5",raster = F,label = T)
DimPlot(obj, reduction = "jointpca.umap", group.by = "RNA_snn_res.1.8",raster = F,label = T)
DimPlot(obj, reduction = "jointpca.umap", group.by = "RNA_snn_res.1.6",raster = F,label = T)
DimPlot(obj, reduction = "jointpca.umap", group.by = "RNA_snn_res.1.7",raster = F,label = T)
DimPlot(obj, reduction = "jointpca.umap", group.by = "RNA_snn_res.1.8",raster = F,label = T)
# # 转换为数值型，并重新设置因子水平
obj$RNA_snn_res.1.8 <- factor(obj$RNA_snn_res.1.8, levels = as.character(sort(as.numeric(levels(obj$RNA_snn_res.1.8)))))
# Step 1: 展平列表为一个向量
flattened_genes <- unlist(marker_genes_list)
# Step 2: 去除重复项
unique_genes <- unique(flattened_genes)
# Step 3: 根据原始列表结构重建新的列表
reconstructed_list <- list()
for (gene in unique_genes) {
# 找到第一个包含该基因的组名
group_name <- names(marker_genes_list)[sapply(marker_genes_list, function(x) gene %in% x)][1]
# 如果该组已经存在于新列表中，则添加该基因
if (group_name %in% names(reconstructed_list)) {
reconstructed_list[[group_name]] <- c(reconstructed_list[[group_name]], gene)
} else {
# 如果该组不存在，则创建新的组并添加该基因
reconstructed_list[[group_name]] <- gene
}
}
# 输出结果
reconstructed_list
# 创建点图
p_1.8 <- DotPlot(obj, group.by = "RNA_snn_res.1.8", features = reconstructed_list) +
RotatedAxis() +
ggtitle("integrated by jointPCA") +
theme(plot.title = element_text(hjust = 0.5))
# 保存图形
ggsave("res1.8_jointPCA_clust.png", plot = p_1.5, width = 35, height = 12, dpi = 300)
# 保存图形
ggsave("res1.8_jointPCA_clust.png", plot = p_1.8, width = 35, height = 12, dpi = 300)
obj$jointpca.clust <-obj$RNA_snn_res.1.8
# 转换为数值型，并重新设置因子水平
obj$jointpca.clust <- factor(obj$jointpca.clust, levels = as.character(sort(as.numeric(levels(obj$jointpca.clust)))))
FeaturePlot(obj,c("Crym","Col25a1","Rax"),order = F,raster = F,max.cutoff = 0.95,pt.size = 0.1)
# 获取基因列表
genes_to_plot <- c(unlist(reconstructed_list), "Col25a1")
# 计算基因数量
num_genes <- length(genes_to_plot)
# 动态调整 ncol
ncol <- min(5, ceiling(sqrt(num_genes)))  # 最多5列，但会根据基因数量调整
# 创建 FeaturePlot
p <- FeaturePlot(obj,
features = genes_to_plot,
order = FALSE,
raster = FALSE,
max.cutoff = 0.98,
pt.size = 0.1,
ncol = ncol,
reduction = "jointpca.umap")
gc()
genes_to_plot
rpca_clust_dotplot<-DotPlot(obj, group.by = "rpca.clust", features = genes_to_plot) + RotatedAxis() +
ggtitle("RPCA clust Markers") +
theme(
plot.title = element_text(hjust = 0.5, size = 20),
axis.text = element_text(size = 18),
axis.title = element_text(size = 18),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18)
)
jointpca_clust_dotplot<-DotPlot(obj, group.by = "RNA_snn_res.1.8", features = genes_to_plot) + RotatedAxis() +
ggtitle("JointPCA clust Markers") +
theme(
plot.title = element_text(hjust = 0.5, size = 20),
axis.text = element_text(size = 18),
axis.title = element_text(size = 18),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18)
)
ggsave("jointpca_clust_dotplot.png", jointpca_clust_dotplot, width = 34, height = 15, dpi = 300)
ggsave("jointpca_clust_dotplot.png", jointpca_clust_dotplot, width = 39, height = 12, dpi = 300)
jointpca_clust_dotplot<-DotPlot(obj, group.by = "RNA_snn_res.1.8", features = reconstructed_list) + RotatedAxis() +
ggtitle("JointPCA clust Markers") +
theme(
plot.title = element_text(hjust = 0.5, size = 20),
axis.text = element_text(size = 18),
axis.title = element_text(size = 18),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18)
)
ggsave("jointpca_clust_dotplot.png", jointpca_clust_dotplot, width = 34, height = 15, dpi = 300)
obj@commands
table(obj$RNA_snn_res.1.8)
obj@commands
# 聚类
# 细分聚类分出OD
obj <- FindNeighbors(obj, dims = 1:15, reduction = "integrated.jointpca",k.param = 5,annoy.metric = "euclidean")
obj <- FindClusters(
obj,
method = "igraph",
algorithm = 4,
resolution = seq(0,2,0.1),
verbose = T
)
k5_tree<-clustree(obj,prefix = "RNA_snn_res.")
# 假设你的数据框名为 k5_tree$data
data <- k5_tree$data
# 处理数据
plot_data <- data %>%
group_by(RNA_snn_res.) %>%
summarise(
avg_stability = mean(sc3_stability, na.rm = TRUE),
cluster_count = n_distinct(cluster)
) %>%
mutate(resolution = as.numeric(as.character(RNA_snn_res.)))
# 创建折线图
ggplot(plot_data, aes(x = resolution, y = avg_stability)) +
geom_line() +
geom_point() +
labs(
x = "Resolution",
y = "Average SC3 Stability",
title = "Average SC3 Stability vs. Resolution"
) +
theme_minimal() +
scale_x_continuous(breaks = plot_data$resolution) +
geom_text(aes(label = cluster_count), vjust = -0.5, size = 3)
# 保存图片
ggsave("k5_clustree_indent_1.png", plot = k5_tree, width = 12, height = 14, dpi = 200)
DimPlot(obj, reduction = "jointpca.umap", group.by = "RNA_snn_res.1.8",raster = F,label = T)
# 聚类
# 细分聚类分出OD
obj <- FindNeighbors(obj, dims = 1:12, reduction = "integrated.jointpca",k.param = 5,annoy.metric = "euclidean")
obj <- FindClusters(
obj,
method = "igraph",
algorithm = 4,
resolution = seq(0,2,0.1),
verbose = T
)
k5_tree<-clustree(obj,prefix = "RNA_snn_res.")
# 假设你的数据框名为 k5_tree$data
data <- k5_tree$data
# 处理数据
plot_data <- data %>%
group_by(RNA_snn_res.) %>%
summarise(
avg_stability = mean(sc3_stability, na.rm = TRUE),
cluster_count = n_distinct(cluster)
) %>%
mutate(resolution = as.numeric(as.character(RNA_snn_res.)))
# 创建折线图
ggplot(plot_data, aes(x = resolution, y = avg_stability)) +
geom_line() +
geom_point() +
labs(
x = "Resolution",
y = "Average SC3 Stability",
title = "Average SC3 Stability vs. Resolution"
) +
theme_minimal() +
scale_x_continuous(breaks = plot_data$resolution) +
geom_text(aes(label = cluster_count), vjust = -0.5, size = 3)
# 保存图片
ggsave("k5_clustree_indent_1.png", plot = k5_tree, width = 12, height = 14, dpi = 200)
DimPlot(obj, reduction = "jointpca.umap", group.by = "RNA_snn_res.1.8",raster = F,label = T)
DimPlot(obj, reduction = "jointpca.umap", group.by = "RNA_snn_res.0.9",raster = F,label = T)
# 获取基因列表
genes_to_plot <- c(unlist(reconstructed_list), "Col25a1")
# 计算基因数量
num_genes <- length(genes_to_plot)
# 动态调整 ncol
ncol <- min(5, ceiling(sqrt(num_genes)))  # 最多5列，但会根据基因数量调整
# 创建 FeaturePlot
p <- FeaturePlot(obj,
features = genes_to_plot,
order = FALSE,
raster = FALSE,
max.cutoff = 0.98,
pt.size = 0.1,
ncol = ncol,
reduction = "jointpca.umap")
p1 <- FeaturePlot(obj,
features = genes_to_plot,
order = T,
raster = FALSE,
max.cutoff = 0.98,
pt.size = 0.1,
ncol = ncol,
reduction = "jointpca.umap")
# 计算合理的图片大小
width <- ncol * 6  # 每列5英寸宽
height <- ceiling(num_genes / ncol) * 5  # 每行5英寸高
# 保存图片
ggsave("FeaturePlot_genes.png", plot = p, width = width, height = height, dpi = 300, limitsize = FALSE)
ggsave("FeaturePlot_ordered_genes.png", plot = p1, width = width, height = height, dpi = 300, limitsize = FALSE)
VlnPlot(obj,c("nFeature_RNA","nFeature_RNA","percent.mt","percent.ribo","percent.hb"),group.by = "RNA_snn_res.0.9",pt.size = 0)
jointpca_clust_dotplot<-DotPlot(obj, group.by = "RNA_snn_res.0.9", features = reconstructed_list) + RotatedAxis() +
ggtitle("JointPCA clust Markers") +
theme(
plot.title = element_text(hjust = 0.5, size = 20),
axis.text = element_text(size = 18),
axis.title = element_text(size = 18),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18)
)
ggsave("jointpca_clust_dotplot.png", jointpca_clust_dotplot, width = 34, height = 15, dpi = 300)
jointpca_clust_dotplot<-DotPlot(obj, group.by = "RNA_snn_res.1.1", features = reconstructed_list) + RotatedAxis() +
ggtitle("JointPCA clust Markers") +
theme(
plot.title = element_text(hjust = 0.5, size = 20),
axis.text = element_text(size = 18),
axis.title = element_text(size = 18),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18)
)
ggsave("jointpca_clust_dotplot.png", jointpca_clust_dotplot, width = 34, height = 15, dpi = 300)
DimPlot(obj, reduction = "jointpca.umap", group.by = "RNA_snn_res.1.1",raster = F,label = T)
gc()
VlnPlot(obj,c("nFeature_RNA","nFeature_RNA","percent.mt","percent.ribo","percent.hb"),group.by = "RNA_snn_res.1.1",pt.size = 0)
# 创建一个细胞类型到cluster的映射字典 25不确定
jointpca_cell_type_mapping <- list(
GABA = c(1,2,7,8,9,13,21,23,25),
GLU = c(3,4,5,6,14,16,18,24,33,35), #24很少表达Slc17a6/Slc32a1 14/35都表达
IPC1 = c(12,20), #Ascl1
IPC2 = c(28,29), # Neurog2
RGC = c(11,15,26,27,31),# cRGC
AS = c(17,22),
TC = c(30), #RGC/TC
Mig = 34, #Microglia/Fib
OPC = 19,
low_quality1 = 10,
low_quality2 = 32,
Ependymal = 37,
OD = 36
)
obj$jointpca_cell_type <- NA
# 根据映射字典为每个cluster添加cell_types列
for (i in seq_along(jointpca_cell_type_mapping)) {
clusters <- jointpca_cell_type_mapping[[i]]
cell_type <- names(jointpca_cell_type_mapping)[i]
# 只为 jointpca_cell_type 为空的情况下进行赋值
mask <- obj$jointpca.clust %in% clusters & is.na(obj$jointpca_cell_type)
# 如果有满足条件的行，则进行赋值
if (any(mask)) {
obj$jointpca_cell_type[mask] <- cell_type
}
}
jointpca_cell_type_dotplot<-DotPlot(obj, group.by = "jointpca_cell_type", features = unique(unlist(marker_genes_list))) + RotatedAxis() +
ggtitle("jointpca Celltype Markers") +
theme(
plot.title = element_text(hjust = 0.5, size = 20),
axis.text = element_text(size = 18),
axis.title = element_text(size = 18),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18)
)
DimPlot(
obj,
reduction = "jointpca.umap",
group.by = "jointpca_cell_type",
raster = F,
label = T
) + ggtitle("jointpca celltype")
sort(unlist(jointpca_cell_type_mapping))
obj$jointpca.clust <-obj$RNA_snn_res.1.1
# 转换为数值型，并重新设置因子水平
obj$jointpca.clust <- factor(obj$jointpca.clust, levels = as.character(sort(as.numeric(levels(obj$jointpca.clust)))))
obj$jointpca_cell_type <- NA
# 根据映射字典为每个cluster添加cell_types列
for (i in seq_along(jointpca_cell_type_mapping)) {
clusters <- jointpca_cell_type_mapping[[i]]
cell_type <- names(jointpca_cell_type_mapping)[i]
# 只为 jointpca_cell_type 为空的情况下进行赋值
mask <- obj$jointpca.clust %in% clusters & is.na(obj$jointpca_cell_type)
# 如果有满足条件的行，则进行赋值
if (any(mask)) {
obj$jointpca_cell_type[mask] <- cell_type
}
}
DimPlot(
obj,
reduction = "jointpca.umap",
group.by = "jointpca_cell_type",
raster = F,
label = T
) + ggtitle("jointpca celltype")
table(obj$jointpca.clust)
table(obj$jointpca_cell_type)
saveRDS("./jointpca_annotated_103530_cells.rds")
saveRDS(obj,"./jointpca_annotated_103530_cells.rds")
Idents(obj)
Idents(obj)<-"jointpca.clust"
Idents(obj)
gc()
# 寻找所有聚类的标记基因
obj <- JoinLayers(obj)
gc()
gc()
scRNA.markers <-
FindAllMarkers(
obj,
only.pos = TRUE,
min.pct = 0.25,
logfc.threshold = 0.6,
slot = "scale.data"
)
scRNA.markers
gc()
scRNA.markers <-
FindAllMarkers(
obj,
only.pos = TRUE,
min.pct = 0.25,
logfc.threshold = 0.6,
slot = "data"
)
write.csv(scRNA.markers, file = "./scRNA_all_markers.csv", row.names = FALSE)
jointpca_annotated_103530_cells <- readRDS("/mnt/data-hdd/cold-data/projects/scRNA-0722-Reviewed/data/processed/seurat/30d/jointpca_annotated_103530_cells.rds")
library(Seurat)
Command(jointpca_annotated_103530_cells)
Command(jointpca_annotated_103530_cells$jointpca_cell_type)
Command(jointpca_annotated_103530_cells@reductions$jointpca.umap)
jointpca_annotated_103530_cells@reductions$jointpca.umap
Command(jointpca_annotated_103530_cells)
Command(jointpca_annotated_103530_cells@reductions)
jointpca_annotated_103530_cells@reductions$jointpca.umap@misc
DimPlot(jointpca_annotated_103530_cells)
DimPlot(jointpca_annotated_103530_cells,label = "jointpca_cell_type")
DimPlot(jointpca_annotated_103530_cells,group.by = "jointpca_cell_type")
dim(jointpca_annotated_103530_cells)
